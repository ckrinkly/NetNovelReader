ext.deps = [:]

def versions = [:]
versions.androidx = "1.1.0-rc01"
versions.apache_commons = "2.5"
versions.arch_core = "1.1.1"
versions.atsl_rules = "1.0.1"
versions.atsl_runner = "1.3.0-alpha02"
versions.cardview = "1.0.0"
versions.circleimageview = "3.0.0"
versions.constraint_layout = "2.0.0-beta2"
versions.dagger = "2.15"
versions.dbutils = "1.7"
versions.dexmaker = "2.2.0"
versions.espresso = "3.3.0-alpha02"
versions.exposed = "0.10.4"
versions.glide = "4.9.0"
versions.gradle_android_plugin = "3.4.2"
versions.hamcrest = "1.3"
versions.jsoup = "1.12.1"
versions.junit = "4.13-beta-3"
versions.kotlin = "1.3.41"
versions.kotlinpoet = "1.0.0-RC1"
versions.ktor = "0.9.3"
versions.leakcanary = "2.0-alpha-3"
versions.lifecycle = "2.2.0-alpha02"
versions.logback_android = "2.0.0"
versions.logger = "2.2.0"
versions.mariadb_client = "2.2.6"
versions.mockito = "2.7.19"
versions.mockito_all = "2.0.2-beta"
versions.mockwebserver = "3.8.1"
versions.navigation = "1.0.0"
versions.okhttp_logging_interceptor = "4.0.1"
versions.paging = "2.1.0"
versions.recyclerview = "1.1.0-beta01"
versions.retrofit = "2.6.0"
versions.room = "2.2.0-alpha01"
versions.rx_android = "2.1.1"
versions.rxjava2 = "2.2.10"
versions.slf4j = "1.7.26"
versions.stetho = "1.5.0"
versions.timber = "4.7.1"
versions.tomcat = "8.5.24"
versions.tomcat_gradle_plugin = "2.5"
versions.versions_gradle_plugin = "0.21.0"
versions.work = "1.0.0-rc02"

def deps = [:]

def androidx = [:]
androidx.annotations = "androidx.annotation:annotation:$versions.androidx"
androidx.app_compat = "androidx.appcompat:appcompat:$versions.androidx"
androidx.recyclerview = "androidx.recyclerview:recyclerview:$versions.recyclerview"
androidx.cardview = "androidx.cardview:cardview:$versions.cardview"
androidx.preference = "androidx.preference:preference:$versions.androidx"
androidx.constraint_layout = "androidx.constraintlayout:constraintlayout:$versions.constraint_layout"

def room = [:]
room.runtime = "androidx.room:room-runtime:$versions.room"
room.compiler = "androidx.room:room-compiler:$versions.room"
room.rxjava2 = "androidx.room:room-rxjava2:$versions.room"
room.testing = "androidx.room:room-testing:$versions.room"
androidx.room = room

def lifecycle = [:]
lifecycle.extensions = "androidx.lifecycle:lifecycle-extensions:$versions.lifecycle"
lifecycle.compiler = "androidx.lifecycle:lifecycle-compiler:$versions.lifecycle"
lifecycle.testing = "androidx.arch.core:core-testing:$versions.lifecycle"
androidx.lifecycle = lifecycle

def paging = [:]
paging.runtime = "androidx.paging:paging-runtime-ktx:$versions.paging"
paging.rxjava2 = "androidx.paging:paging-rxjava2-ktx:$versions.paging"
androidx.paging = paging

deps.androidx = androidx

def work = [:]
work.runtime = "android.arch.work:work-runtime-ktx:$versions.work"
work.rxjava2 = "android.arch.work:work-rxjava2:$versions.work"
work.testing = "android.arch.work:work-testing:$versions.work"
deps.work = work

def navigation = [:]
navigation.fragment = "android.arch.navigation:navigation-fragment-ktx:$versions.navigation"
navigation.ui = "android.arch.navigation:navigation-ui-ktx:$versions.navigation"
deps.navigation = navigation

def retrofit = [:]
retrofit.runtime = "com.squareup.retrofit2:retrofit:$versions.retrofit"
retrofit.gson = "com.squareup.retrofit2:converter-gson:$versions.retrofit"
retrofit.scalars = "com.squareup.retrofit2:converter-scalars:$versions.retrofit"
retrofit.rxjava = "com.squareup.retrofit2:adapter-rxjava2:$versions.retrofit"
retrofit.mock = "com.squareup.retrofit2:retrofit-mock:$versions.retrofit"
deps.retrofit = retrofit
deps.okhttp_logging_interceptor = "com.squareup.okhttp3:logging-interceptor:${versions.okhttp_logging_interceptor}"

def dagger = [:]
dagger.runtime = "com.google.dagger:dagger:$versions.dagger"
dagger.android = "com.google.dagger:dagger-android:$versions.dagger"
dagger.android_support = "com.google.dagger:dagger-android-support:$versions.dagger"
dagger.compiler = "com.google.dagger:dagger-compiler:$versions.dagger"
dagger.android_support_compiler = "com.google.dagger:dagger-android-processor:$versions.dagger"
deps.dagger = dagger

def espresso = [:]
espresso.core = "androidx.test.espresso:espresso-core:$versions.espresso"
espresso.contrib = "androidx.test.espresso:espresso-contrib:$versions.espresso"
espresso.intents = "androidx.test.espresso:espresso-intents:$versions.espresso"
deps.espresso = espresso

def atsl = [:]
atsl.runner = "androidx.test:runner:$versions.atsl_runner"
atsl.rules = "androidx.test:rules:$versions.atsl_runner"
deps.atsl = atsl

def mockito = [:]
mockito.core = "org.mockito:mockito-core:$versions.mockito"
mockito.all = "org.mockito:mockito-all:$versions.mockito_all"
deps.mockito = mockito

def kotlin = [:]
kotlin.stdlib = "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$versions.kotlin"
kotlin.test = "org.jetbrains.kotlin:kotlin-test-junit:$versions.kotlin"
kotlin.allopen = "org.jetbrains.kotlin:kotlin-allopen:$versions.kotlin"
deps.kotlin = kotlin

def ktor = [:]
ktor.servlet = "io.ktor:ktor-server-servlet:${versions.ktor}"
ktor.location = "io.ktor:ktor-locations:${versions.ktor}"
ktor.gson = "io.ktor:ktor-gson:${versions.ktor}"
ktor.auth_jwt = "io.ktor:ktor-auth-jwt:${versions.ktor}"
ktor.html_builder = "io.ktor:ktor-html-builder:${versions.ktor}"
deps.ktor = ktor

def glide = [:]
glide.runtime = "com.github.bumptech.glide:glide:$versions.glide"
glide.compiler = "com.github.bumptech.glide:compiler:$versions.glide"
deps.glide = glide

def leakcanary = [:]
leakcanary.android = "com.squareup.leakcanary:leakcanary-android:$versions.leakcanary"
leakcanary.android_no_op = "com.squareup.leakcanary:leakcanary-android-no-op:1.6.3"
deps.leakcanary = leakcanary

def stetho = [:]
stetho.runtime = "com.facebook.stetho:stetho:$versions.stetho"
stetho.okhttp3 = "com.facebook.stetho:stetho-okhttp3:$versions.stetho"
deps.stetho = stetho

def rxjava2 = [:]
rxjava2.runtime = "io.reactivex.rxjava2:rxjava:$versions.rxjava2"
rxjava2.android = "io.reactivex.rxjava2:rxandroid:$versions.rx_android"
deps.rxjava2 = rxjava2

def slf4j = [:]
slf4j.api = "org.slf4j:slf4j-api:$versions.slf4j"
slf4j.nop = "org.slf4j:slf4j-nop:$versions.slf4j"
deps.slf4j = slf4j

def tomcat_embed = [:]
tomcat_embed.core = "org.apache.tomcat.embed:tomcat-embed-core:${versions.tomcat}"
tomcat_embed.jasper = "org.apache.tomcat.embed:tomcat-embed-jasper:${versions.tomcat}"
deps.tomcat_embed = tomcat_embed

deps.kotlinpoet = "com.squareup:kotlinpoet:$versions.kotlinpoet"
deps.exposed = "org.jetbrains.exposed:exposed:$versions.exposed"
deps.jsoup = "org.jsoup:jsoup:$versions.jsoup"
deps.dexmaker = "com.linkedin.dexmaker:dexmaker-mockito:$versions.dexmaker"
deps.junit = "junit:junit:$versions.junit"
deps.mock_web_server = "com.squareup.okhttp3:mockwebserver:$versions.mockwebserver"
deps.hamcrest = "org.hamcrest:hamcrest-all:$versions.hamcrest"
deps.timber = "com.jakewharton.timber:timber:$versions.timber"
deps.logger = "com.orhanobut:logger:$versions.logger"
deps.circleimageview = "de.hdodenhof:circleimageview:$versions.circleimageview"
deps.dbutils = "commons-dbutils:commons-dbutils:$versions.dbutils"
deps.mariadb_client = "org.mariadb.jdbc:mariadb-java-client:$versions.mariadb_client"
deps.logback_android = "com.github.tony19:logback-android:$versions.logback_android"
deps.gradle_android_plugin = "com.android.tools.build:gradle:$versions.gradle_android_plugin"
deps.kotlin_gradle_plugin = "org.jetbrains.kotlin:kotlin-gradle-plugin:$versions.kotlin"
deps.navigation_safe_args_gradle_plugin = "android.arch.navigation:navigation-safe-args-gradle-plugin:$versions.navigation"
deps.tomcat_gradle_plugin = "com.bmuschko:gradle-tomcat-plugin:$versions.tomcat_gradle_plugin"
deps.versions_gradle_plugin = "com.github.ben-manes:gradle-versions-plugin:$versions.versions_gradle_plugin"
ext.deps = deps

def build_versions = [:]
build_versions.min_sdk = 24
build_versions.target_sdk = 28
build_versions.compile_sdk = 28
build_versions.build_tools = "28.0.2"
build_versions.versionCode = "git rev-list HEAD --count".execute().text.trim().toInteger()
build_versions.versionName = "0.1.$build_versions.versionCode"
ext.build_versions = build_versions

def addRepos(RepositoryHandler handler) {
    handler.maven { url 'https://maven.aliyun.com/repository/jcenter' }
    handler.maven { url 'https://maven.aliyun.com/repository/google' }
    handler.jcenter()
    handler.google()
    handler.mavenCentral()
    handler.maven { url 'https://jitpack.io' }
    handler.maven { url 'https://dl.bintray.com/kotlin/ktor' }
    handler.maven { url 'https://dl.bintray.com/kotlin/exposed' }
}
ext.addRepos = this.&addRepos
