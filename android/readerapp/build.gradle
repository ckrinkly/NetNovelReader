apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion build_versions.compile_sdk
    defaultConfig {
        applicationId "com.netnovelreader"
        minSdkVersion build_versions.min_sdk
        targetSdkVersion build_versions.target_sdk
        versionCode build_versions.versionCode
        versionName build_versions.versionName
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            shrinkResources true
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    androidExtensions {
        experimental = true
    }
    dataBinding {
        enabled = true
    }
    kapt {
        useBuildCache = true
        mapDiagnosticLocations = true
        arguments {
            arg("room.schemaLocation", "$projectDir/schemas")
        }
    }
    compileOptions {
        targetCompatibility 1.8
        sourceCompatibility 1.8
    }
    lintOptions {
        abortOnError false
        disable 'GoogleAppIndexingWarning'
    }
    applicationVariants.all { variant ->
        variant.outputs.all {
            if (variant.name.equalsIgnoreCase('release')){
                def df = new java.text.SimpleDateFormat("yyyyMMdd")
                outputFileName = "reader_${defaultConfig.versionName}_${df.format(new Date())}.apk"
            }
        }
        variant.assemble.doLast { assemble ->
            if(assemble.name.contains("Release")) {
                copy {
                    from variant.outputs*.outputFile
                    into rootDir.getAbsolutePath() + File.separator + "apk"
                }
                delete variant.outputs*.outputFile
            }
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation project(":pageview")
    implementation project(":loadingdialog")

    implementation deps.kotlin.stdlib

    implementation deps.support.v4
    implementation deps.support.app_compat
    implementation deps.constraint_layout
    implementation deps.support.cardview
    implementation deps.support.recyclerview
    implementation deps.support.design
    implementation deps.support.preference

    implementation deps.lifecycle.runtime
    implementation deps.lifecycle.extensions
    kapt deps.lifecycle.compiler
    implementation deps.room.runtime
    implementation deps.room.rxjava2
    kapt deps.room.compiler
    implementation deps.paging
    implementation deps.navigation.ui
    implementation deps.navigation.fragment

    implementation deps.rxjava2.runtime
    implementation deps.rxjava2.android

    implementation deps.retrofit.runtime
    implementation deps.retrofit.gson
    implementation deps.retrofit.scalars
    implementation deps.retrofit.rxjava
    implementation deps.okhttp_logging_interceptor
    implementation deps.jsoup

    implementation deps.circleimageview
    implementation deps.glide.runtime

    implementation deps.slf4j_api
    implementation deps.logback_android

    debugImplementation deps.leakcanary.android
    releaseImplementation deps.leakcanary.android_no_op

    testImplementation deps.junit
    androidTestImplementation deps.atsl.runner
    androidTestImplementation deps.espresso.core
}
